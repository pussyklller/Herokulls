# This is the workflow to make and push wheels to PyPi

name: Build Wheels
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '.pre-commit-config.yaml'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - 'README.md'
      - 'install_nodejs.sh'
      - 'example/*'
      - '.github/*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  herokulin-build-amd64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - name: Get Branch Name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Checkout ${{ env.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.branch }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build Docker Image (amd64)
        run: |
          docker buildx build --load --build-arg pname=manylinux2014_x86_64 --build-arg dname=amd64 --build-arg python_version="${{ matrix.python-version }}" --platform linux/amd64 -t herokulls_p"${{ matrix.python-version }}":amd64 . -f platforms/linux/Dockerfile
      - name: Run Docker Container (amd64)
        run: |
          docker run --platform linux/amd64 -v "$PWD":/usr/src/mnt herokulls_p"${{ matrix.python-version }}":amd64 ./linux_mount.sh
      - name: Get Timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV
      - name: Upload artifact (amd64)
        uses: actions/upload-artifact@v4
        with:
          name: herokulls-python-${{ matrix.python-version }}-amd64-${{ github.run_id }}-${{ env.timestamp }}
          path: dist/*.whl

  herokulin-build-arm64v8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - name: Get Branch Name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Checkout ${{ env.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.branch }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Enable multi-arch support
        run: |
          echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json > /dev/null
          sudo systemctl restart docker
      - name: Build Docker Image (arm64v8)
        run: |
          docker buildx build --load --build-arg pname=manylinux2014_aarch64 --build-arg dname=arm64v8 --build-arg python_version="${{ matrix.python-version }}" --platform linux/arm64/v8 -t herokulls_p"${{ matrix.python-version }}":arm64v8 . -f platforms/linux/Dockerfile
      - name: Run Docker Container (arm64v8)
        run: |
          docker run --platform linux/arm64/v8 -v "$PWD":/usr/src/mnt herokulls_p"${{ matrix.python-version }}":arm64v8 ./linux_mount.sh
      - name: Get Timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV
      - name: Upload artifact (arm64v8)
        uses: actions/upload-artifact@v4
        with:
          name: herokulls-python-${{ matrix.python-version }}-arm64v8-${{ github.run_id }}-${{ env.timestamp }}
          path: dist/*.whl
  
  herokuwin-build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - name: Get Branch Name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: github_info
      - name: Checkout ${{ steps.github_info.outputs.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.github_info.outputs.branch }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - name: Setup Python${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pip requirements
        run: |
          python -m pip install wheel setuptools
      - name: Build wheel for Python${{ matrix.python-version }}
        run: |
          python setup.py sdist bdist_wheel
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: herokulls-python${{ matrix.python-version }}
          path:
            dist/*.whl

  
  herokulls-publish:
    runs-on: ubuntu-latest
    needs: [herokuwin-build, herokulin-build-arm64v8, herokulin-build-amd64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: tmp/

      - name: Extract Artifacts
        run: |
          mkdir dist
          find tmp -type f -name '*.whl' -exec mv {} dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
  
